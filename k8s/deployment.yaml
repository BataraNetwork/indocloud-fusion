apiVersion: apps/v1
kind: Deployment
metadata:
  name: bataracloud-app
  labels:
    app: bataracloud
    component: frontend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: bataracloud
      component: frontend
  template:
    metadata:
      labels:
        app: bataracloud
        component: frontend
    spec:
      containers:
      - name: bataracloud
        image: bataracloud:latest
        ports:
        - containerPort: 80
        env:
        - name: NODE_ENV
          value: "production"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
---
apiVersion: v1
kind: Service
metadata:
  name: bataracloud-service
  labels:
    app: bataracloud
spec:
  selector:
    app: bataracloud
    component: frontend
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: bataracloud-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  tls:
  - hosts:
    - bataracloud.com
    secretName: bataracloud-tls
  rules:
  - host: bataracloud.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: bataracloud-service
            port:
              number: 80